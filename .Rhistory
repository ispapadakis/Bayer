table(Bayer$duration == 365)
X = Bayer %>% subset(.,duration==365)
### country
X %>% ggplot(aes(country,nosebleeds)) + geom_boxplot(varwidth = T)
### eye.colour
X %>% ggplot(aes(eye.colour,nosebleeds,fill=eye.colour)) + geom_boxplot(varwidth = T) +
scale_fill_manual(values=c("grey2", "lightblue2", "tan4", "white"))
Bayer %>% ggplot(aes(country,fill=eye.colour)) + geom_bar() + coord_flip() +
scale_fill_manual(values=c("grey2", "lightblue2", "tan4", "white")) +
ggtitle("Interaction Between Eye Color & Country")
### tissue.use
X %>% ggplot(aes(tissue.use,nosebleeds)) + geom_boxplot(varwidth = T, fill='skyblue')
### previous.year
X %>% ggplot(aes(factor(previous.year),nosebleeds)) + geom_boxplot(varwidth = T, fill='skyblue')
### mucus.viscosity
na.omit(X) %>% ggplot(aes(mucus.viscosity,nosebleeds)) +
geom_point() +
geom_smooth(method = 'loess', formula = 'y ~ x')
mv_cutpoints = c(-Inf,0.5,1,2,4,9)
X %>% ggplot(aes(nosebleeds)) + geom_histogram(bins=6,aes(fill=arm)) + facet_wrap(~cut(mucus.viscosity,mv_cutpoints))
#X %>% ggplot(aes(cut(mucus.viscosity,mv_cutpoints))) + geom_bar(aes(fill=nosebleeds))
X %>% ggplot(aes(cut(mucus.viscosity,mv_cutpoints),nosebleeds)) + geom_boxplot(varwidth = T, fill="skyblue")
# arm
X %>% ggplot(aes(arm,nosebleeds)) + geom_boxplot(fill="skyblue")
# More Placebos with < 365 duration
with(Bayer, mosaicplot(table(arm, (duration < 365)),ylab='Duration < 365',
main="Full Duration by arm", col=c("skyblue","tan")))
with(Bayer, mosaicplot(table(eye.colour, (duration < 365)),ylab='Duration < 365',
main='Full Duration by Eye Color', col=c("skyblue","tan")))
library(rpart)
placebo.rp = rpart(arm~.+Bayer$duration,Bayer[,x_vars])
plotcp(placebo.rp)
placebo.rp = prune(placebo.rp,.015)
plot(placebo.rp, margin=.1)
text(placebo.rp, cex=.8, all=F)
title("Predictor <arm> Not Randomly Assigned")
placebo.rp
# Model -------------------------------------------------------------------
nb.pois = glm(nosebleeds ~  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25)
, family=poisson, data=Bayer)
summary(nb.pois)
#plot(nb.gpois)
nb.qpois = glm(nosebleeds ~  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25)
, family=quasipoisson, data=na.omit(Bayer))
summary(nb.qpois)
library(pscl)
nb.hrd = hurdle(nosebleeds ~  country+tissue.use+previous.year+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist='negbin', data=Bayer)
summary(nb.hrd)
nb.zinfl = zeroinfl(nosebleeds ~  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist="negbin", data=Bayer)
summary(nb.zinfl)
# Compare Models
aic_ = data.frame(poisson=AIC(nb.pois),hurdle=AIC(nb.hrd),zero_inflated=AIC(nb.zinfl),row.names=c('AIC'))
coef_ = data.frame(zero_inflated=coef(nb.zinfl),hurdle=coef(nb.hrd),poisson=coef(nb.pois))
rbind(coef_,aic_)
numberOfClasses <- length(unique(Bayer$nosebleeds))
xgb_params <- list("objective" = "multi:softprob",
"eval_metric" = "mlogloss",
"num_class" = numberOfClasses,
"min_child" = 5,
"eta"=.01)
nround    <- 450 # number of XGBoost rounds
cv.nfold  <- 5
sparse_matrix = sparse.model.matrix(nosebleeds ~ ., data = subset(Bayer,select=-subject))[,-which(names(Bayer)=='nosebleeds')]
output_vector = Bayer$nosebleeds
# Fit cv.nfold * cv.nround XGB models and save OOF predictions
cv_model <- xgb.cv(params = xgb_params,
data = sparse_matrix,
label = output_vector,
nrounds = nround,
nfold = cv.nfold,
verbose = T,
prediction = T)
nb.xgb = xgboost(data = sparse_matrix, label = output_vector,
nrounds = 392, params = xgb_params)
importance <- xgb.importance(feature_names = colnames(sparse_matrix), model = nb.xgb)
head(importance)
xgb.plot.importance(importance_matrix = importance)
# Predictions -------------------------------------------------------------
nb.xgb.pred = matrix(predict(nb.xgb,newdata = sparse_matrix),6)
pred_class = apply(nb.xgb.pred,2,which.max)-1
table(pred_class)
table(Bayer$nosebleeds)
addmargins(table(pred_class,Bayer$nosebleeds))
nosebleeds.exp = exp(predict(nb.qpois))
boxplot(Bayer$nosebleeds~cut(nosebleeds.exp,c(-Inf,.2,.4,.8,1.5,4)))
tapply(Bayer$nosebleeds,cut(nosebleeds.exp,c(-Inf,.2,.4,.8,1.5,4)),mean)
nosebleeds.zpred = predict(nb.zinfl)
boxplot(Bayer$nosebleeds~cut(nosebleeds.zpred,c(-Inf,.2,.4,.8,1.5,4)))
summary(nb.hrd)
nb.hrd = hurdle(nosebleeds ~  country+tissue.use+previous.year+arm+
I(abs(mucus.viscosity-.75)<.25) |  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist='negbin', data=Bayer)
summary(nb.hrd)
nb.hrd = hurdle(nosebleeds ~  country+tissue.use+previous.year+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist='negbin', data=Bayer)
summary(nb.hrd)
nb.zinfl = zeroinfl(nosebleeds ~  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist="negbin", data=Bayer)
summary(nb.zinfl)
aic_ = data.frame(poisson=AIC(nb.pois),hurdle=AIC(nb.hrd),zero_inflated=AIC(nb.zinfl),row.names=c('AIC'))
coef_ = data.frame(zero_inflated=coef(nb.zinfl),hurdle=coef(nb.hrd),poisson=coef(nb.pois))
rbind(coef_,aic_)
nb.zinfl = zeroinfl(nosebleeds ~  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist="negbin", data=Bayer)
summary(nb.zinfl)
nb.zinfl = zeroinfl(nosebleeds ~  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist="negbin", data=Bayer)
nb.zinfl = zeroinfl(nosebleeds ~  eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  eye.colour+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist="negbin", data=Bayer)
summary(nb.zinfl)
# Compare Models
aic_ = data.frame(poisson=AIC(nb.pois),hurdle=AIC(nb.hrd),zero_inflated=AIC(nb.zinfl),row.names=c('AIC'))
coef_ = data.frame(zero_inflated=coef(nb.zinfl),hurdle=coef(nb.hrd),poisson=coef(nb.pois))
rbind(coef_,aic_)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25), dist="negbin", data=Bayer)
summary(nb.zinfl)
rbind(coef_,aic_)
data.frame(poisson=AIC(nb.pois),hurdle=AIC(nb.hrd),zero_inflated=AIC(nb.zinfl),row.names=c('AIC'))
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+eye.colour, dist="negbin", data=Bayer)
summary(nb.zinfl)
AIC(nb.zinfl)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+eye.colour+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+eye.colour, dist="negbin", data=Bayer)
summary(nb.zinfl)
AIC(nb.zinfl)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+eye.colour, dist="negbin", data=Bayer)
summary(nb.zinfl)
AIC(nb.zinfl)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |
country+tissue.use+previous.year+arm+
log(duration)+eye.colour, dist="negbin", data=Bayer)
summary(nb.zinfl)
AIC(nb.zinfl)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |
country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+eye.colour, dist="negbin", data=Bayer)
summary(nb.zinfl)
AIC(nb.zinfl)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |
country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+eye.colour, data=Bayer)
summary(nb.zinfl)
AIC(nb.zinfl)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |
country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+eye.colour, dist="negbin", zero="negbin", data=Bayer)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |
country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+eye.colour, dist="negbin", zero.dist="negbin", data=Bayer)
cbind(data.frame(zero_inflated=coef(nb.zinfl)) ,
data.frame(hurdle=coef(nb.hrd)))
cbind(zero_inflated=coef(nb.zinfl) ,
hurdle=coef(nb.hrd))
coef(nb.hrd)
cbind(zero_inflated=coef(nb.zinfl) ,
hurdle=coef(nb.hrd),poisson=coef(nb.pois))
merge(data.frame(zero_inflated=coef(nb.zinfl)) ,
data.frame(hurdle=coef(nb.hrd)),by=0)
merge(data.frame(zero_inflated=coef(nb.zinfl)) ,
data.frame(hurdle=coef(nb.hrd)),by=0,all=T)
coef_ = merge(coef_,data.frame(poisson=coef(nb.pois)),by=0,all=T)
coef
coef_
data.frame(poisson=coef(nb.pois))
pois_mod = data.frame(poisson=coef(nb.pois))
pois_mod
pois_mod_zero = data.frame(pois_mod,row.names=paste('zero',rownames(pois_mod),sep='_'))
pois_mod_zero
pois_mod_count = data.frame(pois_mod,row.names=paste('count',rownames(pois_mod),sep='_'))
pois_mod_new = rbind(pois_mod_count,pois_mod_zero)
pois_mod_new
coef_ = merge(coef_,pois_mod_new,by=0,all=T)
coef_
pois_mod_new
nrow(pois_mod_new)
coef_ = merge(data.frame(zero_inflated=coef(nb.zinfl)) ,
data.frame(hurdle=coef(nb.hrd)),by=0,all=T)
nrow(coef_)
rownames(coef_)
(coef_)
coef_ = merge(data.frame(zero_inflated=coef(nb.zinfl)) ,
data.frame(hurdle=coef(nb.hrd)),by=0,all=T)
coef_
coef_ = merge(data.frame(zero_inflated=coef(nb.zinfl)) ,
data.frame(hurdle=coef(nb.hrd)),by=0,all=T)
rownames(coef_) = coef_$Row.names
coef_$Row.names = NULL
coef_
pois_mod = data.frame(poisson=coef(nb.pois))
pois_mod_zero = data.frame(pois_mod,row.names=paste('zero',rownames(pois_mod),sep='_'))
pois_mod_count = data.frame(pois_mod,row.names=paste('count',rownames(pois_mod),sep='_'))
pois_mod_new = rbind(pois_mod_count,pois_mod_zero)
coef_ = merge(coef_,pois_mod_new,by=0,all=T)
coef_
coef_ = merge(coef_,pois_mod_new,by=0,all=T)
rownames(coef_) = coef_$Row.names
aic_ = data.frame(poisson=AIC(nb.pois),hurdle=AIC(nb.hrd),zero_inflated=AIC(nb.zinfl),row.names=c('AIC'))
rbind(coef_,aic_)
aic_
coef_
coef_ = merge(data.frame(zero_inflated=coef(nb.zinfl)) ,
data.frame(hurdle=coef(nb.hrd)),by=0,all=T)
rownames(coef_) = coef_$Row.names
coef_$Row.names = NULL
pois_mod = data.frame(poisson=coef(nb.pois))
pois_mod_zero = data.frame(pois_mod,row.names=paste('zero',rownames(pois_mod),sep='_'))
pois_mod_count = data.frame(pois_mod,row.names=paste('count',rownames(pois_mod),sep='_'))
pois_mod_new = rbind(pois_mod_count,pois_mod_zero)
coef_ = merge(coef_,pois_mod_new,by=0,all=T)
coef_
rownames(coef_) = coef_$Row.names
coef_
coef_$Row.names = NULL
coef_
aic_ = data.frame(poisson=AIC(nb.pois),hurdle=AIC(nb.hrd),zero_inflated=AIC(nb.zinfl),row.names=c('AIC'))
rbind(coef_,aic_)
nb.xgb = xgboost(data = sparse_matrix, label = output_vector,
nrounds = 392, params = xgb_params)
nb.xgb = xgboost(data = sparse_matrix, label = output_vector,
verbose = F, nrounds = 392, params = xgb_params)
cv_model <- xgb.cv(params = xgb_params,
data = sparse_matrix,
label = output_vector,
nrounds = nround,
nfold = cv.nfold,
verbose = F,
prediction = T)
cv_model <- xgb.cv(params = xgb_params,
data = sparse_matrix,
label = output_vector,
nrounds = nround,
nfold = cv.nfold,
verbose = F,
prediction = T,
stratified=FALSE)
nb.xgb = xgboost(data = sparse_matrix, label = output_vector,
verbose = F, nrounds = 392, params = xgb_params)
importance <- xgb.importance(feature_names = colnames(sparse_matrix), model = nb.xgb)
head(importance)
xgb.plot.importance(importance_matrix = importance)
nb.xgb.pred = matrix(predict(nb.xgb,newdata = sparse_matrix),6)
pred_class = apply(nb.xgb.pred,2,which.max)-1
table(pred_class)
table(Bayer$nosebleeds)
addmargins(table(pred_class,Bayer$nosebleeds))
addmargins(table(pred=pred_class,true=Bayer$nosebleeds))
nosebleeds.exp = exp(predict(nb.qpois))
boxplot(Bayer$nosebleeds~cut(nosebleeds.exp,c(-Inf,.2,.4,.8,1.5,4)))
nosebleeds.exp = exp(predict(nb.pois))
boxplot(Bayer$nosebleeds~cut(nosebleeds.exp,c(-Inf,.2,.4,.8,1.5,4)))
boxplot(Bayer$nosebleeds~cut(nosebleeds.exp,c(-Inf,.2,.4,.8,1.5,4)),
main="nosebleeds v prediction (Poisson Model)",
ylab='nosebleeds', xlab="Binned Predictions")
# Zero-Inflated Model
nosebleeds.zpred = predict(nb.zinfl)
boxplot(Bayer$nosebleeds~cut(nosebleeds.zpred,c(-Inf,.2,.4,.8,1.5,4)),
main="nosebleeds v prediction (Zero-Inflated Model)",
ylab='nosebleeds', xlab="Binned Predictions")
# Zero-Inflated Model
nosebleeds.hrd_pred = predict(nb.hrd)
# Zero-Inflated Model
nosebleeds.hrd_pred = predict(nb.hrd)
boxplot(Bayer$nosebleeds~cut(nosebleeds.hrd_pred,c(-Inf,.2,.4,.8,1.5,4)),
main="nosebleeds v prediction (Hurdle Model)",
ylab='nosebleeds', xlab="Binned Predictions")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
View(coef_)
# save for presentation
write.csv(coef_,"count_models_est.csv")
summary(nb.qpois)
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |
country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration), dist="negbin", data=Bayer)
summary(nb.zinfl)
data.frame(poisson=AIC(nb.pois),hurdle=AIC(nb.hrd),zero_inflated=AIC(nb.zinfl),row.names=c('AIC'))
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |
country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+eye.colour, dist="negbin", data=Bayer)
summary(nb.zinfl)
summary(nb.hrd)
summary(nb.zinfl)
# save for presentation
write.csv(rbind(coef_,aic_),"count_models_est.csv")
summary(nb.pois)
nb.xgb.pred = matrix(predict(nb.xgb,newdata = sparse_matrix),6)
pred_class = apply(nb.xgb.pred,2,which.max)-1
table(pred_class)
table(Bayer$nosebleeds)
addmargins(table(pred=pred_class,true=Bayer$nosebleeds))
mv.rp
?chisq.test
count_mean = mean(Bayer$nosebleeds)
count_mean
table(rpois(444,count_mean))
table(rnegbin(444,count_mean))
table(rgeom(444,count_mean))
ppois(0,count_mean)
ppois(seq(0,9,1),count_mean)
?ppois
dpois(seq(0,9,1),count_mean)
dpois(seq(0,6,1),count_mean)
dpois(seq(0,5,1),count_mean)
dpois(seq(0,5,1),count_mean)*444
cbind(table(Bayer$nosebleeds,pois(seq(0,5,1),count_mean)*444))
cbind(table(Bayer$nosebleeds,dpois(seq(0,5,1),count_mean)*444))
cbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444))
cbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444)
barplot(cbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444))
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444))
?barplot
p_colors = c('skyblue','seagreen')
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),col=p_colors,beside=T)
barplot(rbind(Observed=table(Bayer$nosebleeds),Poisson=dpois(seq(0,5,1),count_mean)*444),col=p_colors,beside=T)
legend()
barplot(rbind(Observed=table(Bayer$nosebleeds),Poisson=dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Obs','Pois'))
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'))
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'))
grid()
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'),
args.legend = list(bg="white"))
grid()
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'),
args.legend = list(bg="white"))
grid()
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'),
args.legend = list(bg="white"))
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'),
args.legend = list(bg="white"))
legend(c('Observed','Poisson'))
grid()
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'),
args.legend = list(bg="white"))
legend('right',c('Observed','Poisson'))
grid()
legend('right',fill=c('Observed','Poisson'))
grid()
barplot(rbind(table(Bayer$nosebleeds),dpois(seq(0,5,1),count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'),
args.legend = list(bg="white"))
grid()
dnbinom(seq(0,5,1),mu=count_mean)*444)
dnbinom(seq(0,5,1),mu=count_mean)*444
dnbinom(seq(0,5,1),1,mu=count_mean)*444
barplot(rbind(table(Bayer$nosebleeds),
dpois(seq(0,5,1),count_mean)*444,
dnbinom(seq(0,5,1),1,mu=count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'),
args.legend = list(bg="white"))
grid()
p_colors = c('skyblue','seagreen','tan3')
barplot(rbind(table(Bayer$nosebleeds),
dpois(seq(0,5,1),count_mean)*444,
dnbinom(seq(0,5,1),1,mu=count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson'),
args.legend = list(bg="white"))
grid()
count_mean = mean(Bayer$nosebleeds)
barplot(rbind(table(Bayer$nosebleeds),
dpois(seq(0,5,1),count_mean)*444,
dnbinom(seq(0,5,1),1,mu=count_mean)*444),
col=p_colors,beside=T,legend.text=c('Observed','Poisson','Neg Binomial'),
args.legend = list(bg="white"))
grid()
nosebleeds.pois_res = resid(nb.pois)
hist(nosebleeds.pois_res)
qqnorm(nosebleeds.pois_res)
abline(0,c(1,1))
nosebleeds.hrd_res = resid(nb.hrd)
hist(nosebleeds.hrd_res)
qqnorm(nosebleeds.hrd_res)
abline(0,c(1,1))
nosebleeds.zinfl_res = resid(nb.zinfl)
hist(nosebleeds.zinfl_res)
qqnorm(nosebleeds.zinflres)
abline(0,c(1,1))
nosebleeds.zinfl_res = resid(nb.zinfl)
hist(nosebleeds.zinfl_res)
qqnorm(nosebleeds.zinfl_res)
abline(0,c(1,1))
rpart(nosebleeds~mucus.viscocity,Bayer)
rpart(nosebleeds~mucus.viscosity,Bayer)
mvn.rp = rpart(nosebleeds~mucus.viscosity,Bayer)
plotcp(mvn.rp)
mvn.rp = rpart(sqrt(nosebleeds)~mucus.viscosity,Bayer)
plotcp(mvn.rp)
na.omit(X) %>% ggplot(aes(mucus.viscosity,nosebleeds)) +
geom_point() +
geom_smooth(method = 'loess', formula = 'y ~ x')
mvn.rp = rpart(sqrt(nosebleeds)~mucus.viscosity,X)
plotcp(mvn.rp)
mvn.rp = rpart(sqrt(nosebleeds)~mucus.viscosity,X,cp=.001)
plotcp(mvn.rp)
mvn.rp = rpart(I(nosebleeds==0)~mucus.viscosity,X)
plotcp(mvn.rp)
mvn.rp = rpart(factor(nosebleeds==0)~mucus.viscosity,X)
plotcp(mvn.rp)
mvn.rp
mvn.rp = rpart(factor(nosebleeds==0)~mucus.viscosity,Bayer)
plotcp(mvn.rp)
mvn.rp = rpart(factor(nosebleeds==0)~mucus.viscosity+duration,Bayer)
plotcp(mvn.rp)
na.omit(X) %>% ggplot(aes(mucus.viscosity,nosebleeds)) +
geom_point() +
geom_smooth(method = 'loess', formula = 'y ~ x')
plot(nosebleeds~mucus.viscosity,Bayer)
plot(nosebleeds~mucus.viscosity,Bayer,panel=panel.smooth)
source('~/R/Bayer/Bayer1.R')
nb.zinfl = zeroinfl(nosebleeds ~  country+tissue.use+previous.year+mucus.viscosity+arm+
log(duration)+I(abs(mucus.viscosity-.75)<.25) |
country+tissue.use+previous.year+mucus.viscosity+arm+
duration+eye.colour, dist="negbin", data=Bayer)
### R Markdown
# Intro -------------------------------------------------------------------
require(tidyverse)
require(xgboost)
require(Matrix)
require(rpart)
p_colors = c('skyblue','seagreen','tan3')
# Gather Data -------------------------------------------------------------
getwd()
subj_ = read.csv('subject.csv')
rand_ = read.csv('randomization.csv')
effi_ = read.csv('efficacy.csv')
str(subj_)
str(rand_)
str(effi_)
Bayer = subj_ %>%
left_join(rand_,by='subject') %>%
left_join(effi_,by='subject')
summary(Bayer)
#Metadata
#Dependent Variable
y_var = 'nosebleeds'  # Is nosebleeds in Likert Scale?
#Exposure
exposure = 'duration'
# Possible Predictors
x_vars = c('country','eye.colour','tissue.use','previous.year','mucus.viscosity','arm','duration')
# Impute Missing
# Assign Missing to Each Own Category
Bayer$eye.colour = addNA(Bayer$eye.colour)
levels(Bayer$eye.colour)[4] = "N/A"
row_with_missing = which(apply(is.na(Bayer),1,sum)==1)
Bayer[row_with_missing,]
mv.rp = rpart(mucus.viscosity~.,Bayer[,x_vars])
#Impute Modeled to Missing mucus.viscosity
Bayer[row_with_missing,'mucus.viscosity'] = predict(mv.rp,new=Bayer[row_with_missing,x_vars])
# Data Transformation to Faciliate Reports
Bayer$arm = factor(as.character(Bayer$arm), levels=c("PLACEBO","ACTIVE"))
Bayer$tissue.use = factor(as.character(Bayer$tissue.use), levels=c("MEDIUM","HIGH"))
# EDA ---------------------------------------------------------------------
# Analysis of Dependent Variable
Bayer %>% ggplot(aes(duration,nosebleeds)) + geom_point() + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(nosebleeds)) + geom_bar() + ggtitle('Nosebleeds Distribution')
Bayer %>% ggplot(aes(duration)) + geom_histogram(bins=10) + ggtitle('Duration Distribution')
Bayer %>% ggplot(aes(duration,nosebleeds)) + geom_boxplot() + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(nosebleeds)) + geom_boxplot(aes(group_by=duration)) + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(nosebleeds)) + geom_boxplot() + facet_wrap(~duration) + ggtitle('Nosebleeds by Duration')
# Analysis of Dependent Variable
Bayer %>% ggplot(aes(duration,nosebleeds)) + geom_point() + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(nosebleeds)) + geom_point(jitter=1) + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(nosebleeds)) + geom_point() + geom_jitter() + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(nosebleeds)) + geom_point() + geom_jitter(duration) + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(nosebleeds)) + geom_point() + geom_jitter(aes(duration)) + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(nosebleeds,duration)) + geom_point() + geom_jitter() + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(duration,nosebleeds)) + geom_point() + geom_jitter() + ggtitle('Nosebleeds by Duration')
Bayer %>% ggplot(aes(duration,nosebleeds)) + geom_point() + geom_jitter() +
ggtitle('Nosebleeds by Duration (plut x-axis noise)')
Bayer %>% ggplot(aes(duration,nosebleeds)) + geom_point() + geom_jitter() +
ggtitle('Nosebleeds by Duration (plus x-axis noise)')
Bayer %>% ggplot(aes(duration,nosebleeds)) + geom_boxplot()
Bayer %>% ggplot(aes(group_by=duration,nosebleeds)) + geom_boxplot()
Bayer %>% ggplot(aes(cut(duration,6),nosebleeds)) + geom_boxplot()
Bayer %>% ggplot(aes(cut(duration,6),nosebleeds)) + geom_boxplot(varwidth = T)
na.omit(X) %>% ggplot(aes(mucus.viscosity,nosebleeds)) +
geom_point() +
geom_smooth(method = 'loess', formula = 'y ~ x')
